/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	"/api/auth/login": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Login */
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			/** @description Login request */
			requestBody: {
				content: {
					"application/json": components["schemas"]["login"];
				};
			};
			responses: {
				/** @description User logged in successfully */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							id: string;
							/** Format: uuid */
							userId: string;
							expiresAt: string;
							createdAt?: string;
							updatedAt?: string | null;
						};
					};
				};
				/** @description User has no password */
				400: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["response"];
					};
				};
				/** @description Incorrect email or password */
				401: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["response"];
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/api/auth/register": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Register */
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			/** @description Register request */
			requestBody: {
				content: {
					"application/json": components["schemas"]["register"];
				};
			};
			responses: {
				/** @description User registered successfully */
				201: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							id: string;
							/** Format: uuid */
							userId: string;
							expiresAt: string;
							createdAt?: string;
							updatedAt?: string | null;
						};
					};
				};
				/** @description Something went wrong */
				400: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["response"];
					};
				};
				/** @description User already exists */
				409: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["response"];
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/api/auth/logout": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		/** Logout */
		post: {
			parameters: {
				query?: never;
				header: {
					momentum_session_id: string;
				};
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description Success */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": components["schemas"]["response"];
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: {
		/** @example {
		 *       "message": "Hello world"
		 *     } */
		response: {
			message: string;
		};
		/** @example {
		 *       "email": "user@example.com",
		 *       "password": "password"
		 *     } */
		login: {
			/** Format: email */
			email: string;
			password: string;
		};
		/** @example {
		 *       "name": "John Doe",
		 *       "email": "user@example.com",
		 *       "password": "password"
		 *     } */
		register: {
			name: string;
			/** Format: email */
			email: string;
			password: string;
		};
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
